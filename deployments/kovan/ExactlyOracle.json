{
  "address": "0x76724199e6b1fd1E6E2C9B744Ee69D294f87D1a2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_chainlinkFeedRegistry",
          "type": "address"
        },
        {
          "internalType": "string[]",
          "name": "_symbols",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "_sources",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_baseCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxDelayTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "enum ErrorCode",
          "name": "error",
          "type": "uint8"
        }
      ],
      "name": "GenericError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "source",
          "type": "address"
        }
      ],
      "name": "SymbolSourceUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ORACLE_DECIMALS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TARGET_DECIMALS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "assetsSources",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseCurrency",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainlinkFeedRegistry",
      "outputs": [
        {
          "internalType": "contract IChainlinkFeedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "getAssetPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxDelayTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "symbols",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "sources",
          "type": "address[]"
        }
      ],
      "name": "setAssetSources",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1d8790ac6820b8d425ab94fcd5c156acf850553b8ed325694a0ee6f3b000cf16",
  "receipt": {
    "to": null,
    "from": "0xd1Cd4c2e15Bf0D05796c7C9f7c0Eaba30119f454",
    "contractAddress": "0x76724199e6b1fd1E6E2C9B744Ee69D294f87D1a2",
    "transactionIndex": 13,
    "gasUsed": "1822188",
    "logsBloom": "0x
    "blockHash": "0x994dbe0a104a63da3143dba9866ebaa0936241ffc19ce4fe535c68271771512c",
    "transactionHash": "0x1d8790ac6820b8d425ab94fcd5c156acf850553b8ed325694a0ee6f3b000cf16",
    "logs": [
      {
        "transactionIndex": 13,
        "blockNumber": 30309710,
        "transactionHash": "0x1d8790ac6820b8d425ab94fcd5c156acf850553b8ed325694a0ee6f3b000cf16",
        "address": "0x76724199e6b1fd1E6E2C9B744Ee69D294f87D1a2",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d1cd4c2e15bf0d05796c7c9f7c0eaba30119f454",
          "0x000000000000000000000000d1cd4c2e15bf0d05796c7c9f7c0eaba30119f454"
        ],
        "data": "0x",
        "logIndex": 52,
        "blockHash": "0x994dbe0a104a63da3143dba9866ebaa0936241ffc19ce4fe535c68271771512c"
      },
      {
        "transactionIndex": 13,
        "blockNumber": 30309710,
        "transactionHash": "0x1d8790ac6820b8d425ab94fcd5c156acf850553b8ed325694a0ee6f3b000cf16",
        "address": "0x76724199e6b1fd1E6E2C9B744Ee69D294f87D1a2",
        "topics": [
          "0x2c45f112d0b8d12f20e6edc2f64a7f9a88f97f5f9f993a0855ab9ba51cc84377",
          "0xa5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
          "0x0000000000000000000000004f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa"
        ],
        "data": "0x",
        "logIndex": 53,
        "blockHash": "0x994dbe0a104a63da3143dba9866ebaa0936241ffc19ce4fe535c68271771512c"
      },
      {
        "transactionIndex": 13,
        "blockNumber": 30309710,
        "transactionHash": "0x1d8790ac6820b8d425ab94fcd5c156acf850553b8ed325694a0ee6f3b000cf16",
        "address": "0x76724199e6b1fd1E6E2C9B744Ee69D294f87D1a2",
        "topics": [
          "0x2c45f112d0b8d12f20e6edc2f64a7f9a88f97f5f9f993a0855ab9ba51cc84377",
          "0x0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
          "0x000000000000000000000000d0a1e359811322d97991e03f863a0c30c2cf029c"
        ],
        "data": "0x",
        "logIndex": 54,
        "blockHash": "0x994dbe0a104a63da3143dba9866ebaa0936241ffc19ce4fe535c68271771512c"
      }
    ],
    "blockNumber": 30309710,
    "cumulativeGasUsed": "12063491",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xAa7F6f7f507457a1EE157fE97F6c7DB2BEec5cD0",
    [
      "DAI",
      "WETH"
    ],
    [
      "0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa",
      "0xd0a1e359811322d97991e03f863a0c30c2cf029c"
    ],
    "0x0000000000000000000000000000000000000348",
    86400
  ],
  "numDeployments": 1,
  "solcInputHash": "b29e96ef9678c31f24803a302d5ef6ff",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_chainlinkFeedRegistry\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"_symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_sources\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_baseCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxDelayTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum ErrorCode\",\"name\":\"error\",\"type\":\"uint8\"}],\"name\":\"GenericError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"SymbolSourceUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ORACLE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TARGET_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"assetsSources\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseCurrency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainlinkFeedRegistry\",\"outputs\":[{\"internalType\":\"contract IChainlinkFeedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDelayTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"}],\"name\":\"setAssetSources\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_baseCurrency\":\"The base currency used for the price quotes\",\"_chainlinkFeedRegistry\":\"The address of the Chainlink Feed Registry implementation\",\"_maxDelayTime\":\"The max delay time for Chainlink prices to be considered as updated\",\"_sources\":\"The address of the source of each asset\",\"_symbols\":\"The symbols of the assets\"}},\"getAssetPrice(string)\":{\"params\":{\"symbol\":\"The symbol of the asset\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setAssetSources(string[],address[])\":{\"params\":{\"sources\":\"The address of the source of each asset\",\"symbols\":\"The symbols of the assets\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"ExactlyOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"getAssetPrice(string)\":{\"notice\":\"Gets an asset price by symbol. If the returned price by the Chainlink Feed Registry is <= 0 the call is reverted\"},\"setAssetSources(string[],address[])\":{\"notice\":\"Set or replace the sources of assets\"}},\"notice\":\"Proxy smart contract to get the price of an asset from a price source, with Chainlink Feed Registry         smart contract as the primary option\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExactlyOracle.sol\":\"ExactlyOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, _msgSender());\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4a1a0ba12bf1a33f10d9fe226278cf59675c0b929d29e4da99658a079b27fb84\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/ExactlyOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\n\\nimport \\\"./interfaces/IOracle.sol\\\";\\nimport \\\"./interfaces/IChainlinkFeedRegistry.sol\\\";\\nimport \\\"./utils/Errors.sol\\\";\\n\\n/**\\n * @title ExactlyOracle\\n * @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Feed Registry\\n *         smart contract as the primary option\\n */\\ncontract ExactlyOracle is IOracle, AccessControl {\\n    mapping(string => address) public assetsSources;\\n    IChainlinkFeedRegistry public chainlinkFeedRegistry;\\n    address public immutable baseCurrency;\\n    uint256 public immutable maxDelayTime;\\n\\n    uint256 public constant TARGET_DECIMALS = 18; // Auditor's target precision\\n    uint256 public constant ORACLE_DECIMALS = 8; // At date of Exactly launch, Chainlink uses an 8-digit price\\n\\n    event SymbolSourceUpdated(string indexed symbol, address indexed source);\\n\\n    /**\\n     * @notice Constructor\\n     * @param _chainlinkFeedRegistry The address of the Chainlink Feed Registry implementation\\n     * @param _symbols The symbols of the assets\\n     * @param _sources The address of the source of each asset\\n     * @param _baseCurrency The base currency used for the price quotes\\n     * @param _maxDelayTime The max delay time for Chainlink prices to be considered as updated\\n     */\\n    constructor(\\n        address _chainlinkFeedRegistry,\\n        string[] memory _symbols,\\n        address[] memory _sources,\\n        address _baseCurrency,\\n        uint256 _maxDelayTime\\n    ) {\\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n        _setAssetsSources(_symbols, _sources);\\n\\n        chainlinkFeedRegistry = IChainlinkFeedRegistry(_chainlinkFeedRegistry);\\n        baseCurrency = _baseCurrency;\\n        maxDelayTime = _maxDelayTime;\\n    }\\n\\n    /**\\n     * @notice Set or replace the sources of assets\\n     * @param symbols The symbols of the assets\\n     * @param sources The address of the source of each asset\\n     */\\n    function setAssetSources(\\n        string[] calldata symbols,\\n        address[] calldata sources\\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n        _setAssetsSources(symbols, sources);\\n    }\\n\\n    /**\\n     * @notice Gets an asset price by symbol. If the returned price by the Chainlink Feed Registry is <= 0 the call is reverted\\n     * @param symbol The symbol of the asset\\n     */\\n    function getAssetPrice(string memory symbol)\\n        public\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        (, int256 price, , uint256 updatedAt, ) = chainlinkFeedRegistry\\n            .latestRoundData(assetsSources[symbol], baseCurrency);\\n        if (price > 0 && updatedAt >= block.timestamp - maxDelayTime) {\\n            return _scaleOraclePriceByDigits(uint256(price));\\n        } else {\\n            revert GenericError(ErrorCode.PRICE_ERROR);\\n        }\\n    }\\n\\n    /**\\n     * @notice Internal function to set the sources for each asset\\n     * @param symbols The symbols of the assets\\n     * @param sources The addresses of the sources of each asset\\n     */\\n    function _setAssetsSources(\\n        string[] memory symbols,\\n        address[] memory sources\\n    ) internal {\\n        if (symbols.length != sources.length) {\\n            revert GenericError(ErrorCode.INCONSISTENT_PARAMS_LENGTH);\\n        }\\n\\n        for (uint256 i = 0; i < symbols.length; i++) {\\n            assetsSources[symbols[i]] = sources[i];\\n            emit SymbolSourceUpdated(symbols[i], sources[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice Scale the price returned by the oracle to an 18-digit decimal for use by Auditor\\n     * @param price The price to be scaled\\n     */\\n    function _scaleOraclePriceByDigits(uint256 price)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        return price * 10**(TARGET_DECIMALS - ORACLE_DECIMALS);\\n    }\\n}\\n\",\"keccak256\":\"0xab9da19f091466ffc59a51aa26962c2594db67c0d11fa728c38557488beaf9c6\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/IChainlinkFeedRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\n/**\\n * @title IChainlinkFeedRegistry\\n * @notice The interface of an on-chain registry of assets to price aggregators\\n */\\ninterface IChainlinkFeedRegistry {\\n    /**\\n     * @notice Get data about the latest round\\n     * @param base Base asset address\\n     * @param quote Quote asset address\\n     * @return roundId is the round ID from the aggregator for which the data was\\n     *         retrieved combined with a phase to ensure that round IDs get larger as\\n     *         time moves forward. Not currently in use\\n     * @return answer is the answer for the given round\\n     * @return startedAt is the timestamp when the round was started. Not currently in use\\n     *         (Only some AggregatorV3Interface implementations return meaningful values)\\n     * @return updatedAt is the timestamp when the round last was updated.\\n     *         (i.e. answer was last computed)\\n     * @return answeredInRound is the round ID of the round in which the answer\\n     *         was computed. Not currently in use\\n     *         (Only some AggregatorV3Interface implementations return meaningful values)\\n     * @dev Note that answer and updatedAt may change between queries.\\n     */\\n    function latestRoundData(address base, address quote)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0xb21398f6effc0ea168d6f51994a0316aeecc58f369345b7c22653c74c2071563\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\n/**\\n * @title IOracle interface\\n * @notice Interface for the Exactly oracle.\\n */\\ninterface IOracle {\\n    /**\\n     * @dev Returns the asset price\\n     * @param symbol The symbol of the asset\\n     * @return The price of the asset\\n     */\\n    function getAssetPrice(string memory symbol)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6f4220f4a16226c85164c6dc4481878bb01b33a145ba4d4e4c8cf5fbb3f6cc52\",\"license\":\"GPL-3.0-or-later\"},\"contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\nerror GenericError(ErrorCode error);\\n\\nenum ErrorCode {\\n    NO_ERROR,\\n    MARKET_NOT_LISTED,\\n    MARKET_ALREADY_LISTED,\\n    SNAPSHOT_ERROR,\\n    PRICE_ERROR,\\n    INSUFFICIENT_LIQUIDITY,\\n    INSUFFICIENT_SHORTFALL,\\n    AUDITOR_MISMATCH,\\n    TOO_MUCH_REPAY,\\n    REPAY_ZERO,\\n    TOKENS_MORE_THAN_BALANCE,\\n    INVALID_POOL_STATE,\\n    INVALID_POOL_ID,\\n    LIQUIDATOR_NOT_BORROWER,\\n    NOT_A_FIXED_LENDER_SENDER,\\n    INVALID_SET_BORROW_CAP,\\n    MARKET_BORROW_CAP_REACHED,\\n    INCONSISTENT_PARAMS_LENGTH,\\n    REDEEM_CANT_BE_ZERO,\\n    EXIT_MARKET_BALANCE_OWED,\\n    CALLER_MUST_BE_FIXED_LENDER,\\n    CONTRACT_ALREADY_INITIALIZED,\\n    INSUFFICIENT_PROTOCOL_LIQUIDITY,\\n    EXCEEDED_MAX_UTILIZATION_RATE,\\n    TOO_MUCH_SLIPPAGE,\\n    TOO_MUCH_REPAY_TRANSFER,\\n    SMART_POOL_FUNDS_LOCKED,\\n    INVALID_TIME_DIFFERENCE\\n}\\n\",\"keccak256\":\"0xfffeabe2b2586e80b0232599d651e13311e1755b5b7d38a3c0bb249013b54ce8\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200286f3803806200286f833981810160405281019062000037919062000691565b6200004c6000801b33620000e960201b60201c565b6200005e8484620000ff60201b60201c565b84600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a08181525050505050505062000aa0565b620000fb82826200032f60201b60201c565b5050565b8051825114620001495760116040517fede8a599000000000000000000000000000000000000000000000000000000008152600401620001409190620007a6565b60405180910390fd5b60005b82518110156200032a5781818151811062000190577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516001848381518110620001d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604051620001eb91906200078d565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081818151811062000271577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16838281518110620002c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604051620002e091906200078d565b60405180910390207f2c45f112d0b8d12f20e6edc2f64a7f9a88f97f5f9f993a0855ab9ba51cc8437760405160405180910390a38080620003219062000969565b9150506200014c565b505050565b6200034182826200042060201b60201c565b6200041c57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620003c16200048a60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6000620004a9620004a384620007ec565b620007c3565b90508083825260208201905082856020860282011115620004c957600080fd5b60005b85811015620004fd5781620004e28882620005dc565b845260208401935060208301925050600181019050620004cc565b5050509392505050565b60006200051e62000518846200081b565b620007c3565b905080838252602082019050828560208602820111156200053e57600080fd5b60005b858110156200058d57815167ffffffffffffffff8111156200056257600080fd5b8086016200057189826200064d565b8552602085019450602084019350505060018101905062000541565b5050509392505050565b6000620005ae620005a8846200084a565b620007c3565b905082815260208101848484011115620005c757600080fd5b620005d4848285620008fd565b509392505050565b600081519050620005ed8162000a6c565b92915050565b600082601f8301126200060557600080fd5b81516200061784826020860162000492565b91505092915050565b600082601f8301126200063257600080fd5b81516200064484826020860162000507565b91505092915050565b600082601f8301126200065f57600080fd5b81516200067184826020860162000597565b91505092915050565b6000815190506200068b8162000a86565b92915050565b600080600080600060a08688031215620006aa57600080fd5b6000620006ba88828901620005dc565b955050602086015167ffffffffffffffff811115620006d857600080fd5b620006e68882890162000620565b945050604086015167ffffffffffffffff8111156200070457600080fd5b6200071288828901620005f3565b93505060606200072588828901620005dc565b925050608062000738888289016200067a565b9150509295509295909350565b6200075081620008e9565b82525050565b6000620007638262000880565b6200076f81856200088b565b935062000781818560208601620008fd565b80840191505092915050565b60006200079b828462000756565b915081905092915050565b6000602082019050620007bd600083018462000745565b92915050565b6000620007cf620007e2565b9050620007dd828262000933565b919050565b6000604051905090565b600067ffffffffffffffff8211156200080a576200080962000a15565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000839576200083862000a15565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000868576200086762000a15565b5b620008738262000a44565b9050602081019050919050565b600081519050919050565b600081905092915050565b6000620008a382620008bf565b9050919050565b6000819050620008ba8262000a55565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620008f682620008aa565b9050919050565b60005b838110156200091d57808201518184015260208101905062000900565b838111156200092d576000848401525b50505050565b6200093e8262000a44565b810181811067ffffffffffffffff8211171562000960576200095f62000a15565b5b80604052505050565b60006200097682620008df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620009ac57620009ab620009b7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b601c811062000a695762000a68620009e6565b5b50565b62000a778162000896565b811462000a8357600080fd5b50565b62000a9181620008df565b811462000a9d57600080fd5b50565b60805160601c60a051611d9862000ad76000396000818161051901526107ab01526000818161047901526107310152611d986000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063595465bc11610097578063a217fddf11610066578063a217fddf14610298578063d547741f146102b6578063e2394b08146102d2578063f56c8547146102f0576100f5565b8063595465bc146102105780638670588b1461022c57806391d148541461024a57806392a85fde1461027a576100f5565b80632579d3d6116100d35780632579d3d6146101785780632aedd0eb146101a85780632f2ff15d146101d857806336568abe146101f4576100f5565b806301ffc9a7146100fa5780631ea155021461012a578063248a9ca314610148575b600080fd5b610114600480360381019061010f91906112c0565b61030e565b6040516101219190611586565b60405180910390f35b610132610388565b60405161013f9190611654565b60405180910390f35b610162600480360381019061015d919061125b565b61038d565b60405161016f91906115a1565b60405180910390f35b610192600480360381019061018d91906112e9565b6103ac565b60405161019f9190611542565b60405180910390f35b6101c260048036038101906101bd91906112e9565b6103f5565b6040516101cf9190611654565b60405180910390f35b6101f260048036038101906101ed9190611284565b6105a1565b005b61020e60048036038101906102099190611284565b6105ca565b005b61022a600480360381019061022591906111e6565b61064d565b005b6102346106c0565b6040516102419190611654565b60405180910390f35b610264600480360381019061025f9190611284565b6106c5565b6040516102719190611586565b60405180910390f35b61028261072f565b60405161028f9190611542565b60405180910390f35b6102a0610753565b6040516102ad91906115a1565b60405180910390f35b6102d060048036038101906102cb9190611284565b61075a565b005b6102da610783565b6040516102e791906115bc565b60405180910390f35b6102f86107a9565b6040516103059190611654565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103815750610380826107cd565b5b9050919050565b600881565b6000806000838152602001908152602001600020600101549050919050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bcfd032d60018660405161044891906114f1565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016104b592919061155d565b60a06040518083038186803b1580156104cd57600080fd5b505afa1580156104e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610505919061132a565b5093505092505060008213801561054757507f0000000000000000000000000000000000000000000000000000000000000000426105439190611939565b8110155b1561055e5761055582610837565b9250505061059c565b60046040517fede8a59900000000000000000000000000000000000000000000000000000000815260040161059391906115d7565b60405180910390fd5b919050565b6105aa8261038d565b6105bb816105b6610865565b61086d565b6105c5838361090a565b505050565b6105d2610865565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063690611634565b60405180910390fd5b61064982826109ea565b5050565b6000801b6106628161065d610865565b61086d565b6106b98585906106729190611a1e565b848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050610acb565b5050505050565b601281565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000801b81565b6107638261038d565b6107748161076f610865565b61086d565b61077e83836109ea565b505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000600860126108479190611939565b600a61085391906117c1565b8261085e91906118df565b9050919050565b600033905090565b61087782826106c5565b6109065761089c8173ffffffffffffffffffffffffffffffffffffffff166014610cec565b6108aa8360001c6020610cec565b6040516020016108bb929190611508565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd91906115f2565b60405180910390fd5b5050565b61091482826106c5565b6109e657600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061098b610865565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6109f482826106c5565b15610ac757600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610a6c610865565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b8051825114610b125760116040517fede8a599000000000000000000000000000000000000000000000000000000008152600401610b0991906115d7565b60405180910390fd5b60005b8251811015610ce757818181518110610b57577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516001848381518110610b9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604051610baf91906114f1565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818181518110610c34577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16838281518110610c8b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604051610ca091906114f1565b60405180910390207f2c45f112d0b8d12f20e6edc2f64a7f9a88f97f5f9f993a0855ab9ba51cc8437760405160405180910390a38080610cdf90611b06565b915050610b15565b505050565b606060006002836002610cff91906118df565b610d099190611718565b67ffffffffffffffff811115610d48577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610d7a5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610dd8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610e62577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610ea291906118df565b610eac9190611718565b90505b6001811115610f98577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610f14577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110610f51577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610f9190611aab565b9050610eaf565b5060008414610fdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd390611614565b60405180910390fd5b8091505092915050565b6000610ff9610ff484611694565b61166f565b9050808382526020820190508285602086028201111561101857600080fd5b60005b8581101561106257813567ffffffffffffffff81111561103a57600080fd5b8086016110478982611192565b8552602085019450602084019350505060018101905061101b565b5050509392505050565b600061107f61107a846116c0565b61166f565b90508281526020810184848401111561109757600080fd5b6110a2848285611a69565b509392505050565b6000813590506110b981611cd8565b92915050565b60008083601f8401126110d157600080fd5b8235905067ffffffffffffffff8111156110ea57600080fd5b60208301915083602082028301111561110257600080fd5b9250929050565b60008083601f84011261111b57600080fd5b8235905067ffffffffffffffff81111561113457600080fd5b60208301915083602082028301111561114c57600080fd5b9250929050565b60008135905061116281611cef565b92915050565b60008135905061117781611d06565b92915050565b60008151905061118c81611d1d565b92915050565b600082601f8301126111a357600080fd5b81356111b384826020860161106c565b91505092915050565b6000815190506111cb81611d34565b92915050565b6000815190506111e081611d4b565b92915050565b600080600080604085870312156111fc57600080fd5b600085013567ffffffffffffffff81111561121657600080fd5b61122287828801611109565b9450945050602085013567ffffffffffffffff81111561124157600080fd5b61124d878288016110bf565b925092505092959194509250565b60006020828403121561126d57600080fd5b600061127b84828501611153565b91505092915050565b6000806040838503121561129757600080fd5b60006112a585828601611153565b92505060206112b6858286016110aa565b9150509250929050565b6000602082840312156112d257600080fd5b60006112e084828501611168565b91505092915050565b6000602082840312156112fb57600080fd5b600082013567ffffffffffffffff81111561131557600080fd5b61132184828501611192565b91505092915050565b600080600080600060a0868803121561134257600080fd5b6000611350888289016111d1565b95505060206113618882890161117d565b9450506040611372888289016111bc565b9350506060611383888289016111bc565b9250506080611394888289016111d1565b9150509295509295909350565b6113aa8161196d565b82525050565b6113b98161197f565b82525050565b6113c88161198b565b82525050565b6113d781611a33565b82525050565b6113e681611a57565b82525050565b60006113f7826116f1565b61140181856116fc565b9350611411818560208601611a78565b61141a81611bdc565b840191505092915050565b6000611430826116f1565b61143a818561170d565b935061144a818560208601611a78565b80840191505092915050565b60006114636020836116fc565b915061146e82611bfa565b602082019050919050565b600061148660178361170d565b915061149182611c23565b601782019050919050565b60006114a960118361170d565b91506114b482611c4c565b601182019050919050565b60006114cc602f836116fc565b91506114d782611c75565b604082019050919050565b6114eb816119fe565b82525050565b60006114fd8284611425565b915081905092915050565b600061151382611479565b915061151f8285611425565b915061152a8261149c565b91506115368284611425565b91508190509392505050565b600060208201905061155760008301846113a1565b92915050565b600060408201905061157260008301856113a1565b61157f60208301846113a1565b9392505050565b600060208201905061159b60008301846113b0565b92915050565b60006020820190506115b660008301846113bf565b92915050565b60006020820190506115d160008301846113ce565b92915050565b60006020820190506115ec60008301846113dd565b92915050565b6000602082019050818103600083015261160c81846113ec565b905092915050565b6000602082019050818103600083015261162d81611456565b9050919050565b6000602082019050818103600083015261164d816114bf565b9050919050565b600060208201905061166960008301846114e2565b92915050565b600061167961168a565b90506116858282611ad5565b919050565b6000604051905090565b600067ffffffffffffffff8211156116af576116ae611bad565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156116db576116da611bad565b5b6116e482611bdc565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611723826119fe565b915061172e836119fe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561176357611762611b4f565b5b828201905092915050565b6000808291508390505b60018511156117b85780860481111561179457611793611b4f565b5b60018516156117a35780820291505b80810290506117b185611bed565b9450611778565b94509492505050565b60006117cc826119fe565b91506117d7836119fe565b92506118047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461180c565b905092915050565b60008261181c57600190506118d8565b8161182a57600090506118d8565b8160018114611840576002811461184a57611879565b60019150506118d8565b60ff84111561185c5761185b611b4f565b5b8360020a91508482111561187357611872611b4f565b5b506118d8565b5060208310610133831016604e8410600b84101617156118ae5782820a9050838111156118a9576118a8611b4f565b5b6118d8565b6118bb848484600161176e565b925090508184048111156118d2576118d1611b4f565b5b81810290505b9392505050565b60006118ea826119fe565b91506118f5836119fe565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561192e5761192d611b4f565b5b828202905092915050565b6000611944826119fe565b915061194f836119fe565b92508282101561196257611961611b4f565b5b828203905092915050565b6000611978826119de565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60008190506119cf82611cc4565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000611a2b368484610fe6565b905092915050565b6000611a3e82611a45565b9050919050565b6000611a50826119de565b9050919050565b6000611a62826119c1565b9050919050565b82818337600083830152505050565b60005b83811015611a96578082015181840152602081019050611a7b565b83811115611aa5576000848401525b50505050565b6000611ab6826119fe565b91506000821415611aca57611ac9611b4f565b5b600182039050919050565b611ade82611bdc565b810181811067ffffffffffffffff82111715611afd57611afc611bad565b5b80604052505050565b6000611b11826119fe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b4457611b43611b4f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b601c8110611cd557611cd4611b7e565b5b50565b611ce18161196d565b8114611cec57600080fd5b50565b611cf88161198b565b8114611d0357600080fd5b50565b611d0f81611995565b8114611d1a57600080fd5b50565b611d26816119d4565b8114611d3157600080fd5b50565b611d3d816119fe565b8114611d4857600080fd5b50565b611d5481611a08565b8114611d5f57600080fd5b5056fea2646970667358221220e26c4111d4605623888d76d9a57bba0d9d31ef1cbb5bed4cc0808eb9785fe28e64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063595465bc11610097578063a217fddf11610066578063a217fddf14610298578063d547741f146102b6578063e2394b08146102d2578063f56c8547146102f0576100f5565b8063595465bc146102105780638670588b1461022c57806391d148541461024a57806392a85fde1461027a576100f5565b80632579d3d6116100d35780632579d3d6146101785780632aedd0eb146101a85780632f2ff15d146101d857806336568abe146101f4576100f5565b806301ffc9a7146100fa5780631ea155021461012a578063248a9ca314610148575b600080fd5b610114600480360381019061010f91906112c0565b61030e565b6040516101219190611586565b60405180910390f35b610132610388565b60405161013f9190611654565b60405180910390f35b610162600480360381019061015d919061125b565b61038d565b60405161016f91906115a1565b60405180910390f35b610192600480360381019061018d91906112e9565b6103ac565b60405161019f9190611542565b60405180910390f35b6101c260048036038101906101bd91906112e9565b6103f5565b6040516101cf9190611654565b60405180910390f35b6101f260048036038101906101ed9190611284565b6105a1565b005b61020e60048036038101906102099190611284565b6105ca565b005b61022a600480360381019061022591906111e6565b61064d565b005b6102346106c0565b6040516102419190611654565b60405180910390f35b610264600480360381019061025f9190611284565b6106c5565b6040516102719190611586565b60405180910390f35b61028261072f565b60405161028f9190611542565b60405180910390f35b6102a0610753565b6040516102ad91906115a1565b60405180910390f35b6102d060048036038101906102cb9190611284565b61075a565b005b6102da610783565b6040516102e791906115bc565b60405180910390f35b6102f86107a9565b6040516103059190611654565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103815750610380826107cd565b5b9050919050565b600881565b6000806000838152602001908152602001600020600101549050919050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bcfd032d60018660405161044891906114f1565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016104b592919061155d565b60a06040518083038186803b1580156104cd57600080fd5b505afa1580156104e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610505919061132a565b5093505092505060008213801561054757507f0000000000000000000000000000000000000000000000000000000000000000426105439190611939565b8110155b1561055e5761055582610837565b9250505061059c565b60046040517fede8a59900000000000000000000000000000000000000000000000000000000815260040161059391906115d7565b60405180910390fd5b919050565b6105aa8261038d565b6105bb816105b6610865565b61086d565b6105c5838361090a565b505050565b6105d2610865565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063690611634565b60405180910390fd5b61064982826109ea565b5050565b6000801b6106628161065d610865565b61086d565b6106b98585906106729190611a1e565b848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050610acb565b5050505050565b601281565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000801b81565b6107638261038d565b6107748161076f610865565b61086d565b61077e83836109ea565b505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000600860126108479190611939565b600a61085391906117c1565b8261085e91906118df565b9050919050565b600033905090565b61087782826106c5565b6109065761089c8173ffffffffffffffffffffffffffffffffffffffff166014610cec565b6108aa8360001c6020610cec565b6040516020016108bb929190611508565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd91906115f2565b60405180910390fd5b5050565b61091482826106c5565b6109e657600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061098b610865565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6109f482826106c5565b15610ac757600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610a6c610865565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b8051825114610b125760116040517fede8a599000000000000000000000000000000000000000000000000000000008152600401610b0991906115d7565b60405180910390fd5b60005b8251811015610ce757818181518110610b57577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516001848381518110610b9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604051610baf91906114f1565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818181518110610c34577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16838281518110610c8b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604051610ca091906114f1565b60405180910390207f2c45f112d0b8d12f20e6edc2f64a7f9a88f97f5f9f993a0855ab9ba51cc8437760405160405180910390a38080610cdf90611b06565b915050610b15565b505050565b606060006002836002610cff91906118df565b610d099190611718565b67ffffffffffffffff811115610d48577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610d7a5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610dd8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610e62577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610ea291906118df565b610eac9190611718565b90505b6001811115610f98577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610f14577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110610f51577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610f9190611aab565b9050610eaf565b5060008414610fdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd390611614565b60405180910390fd5b8091505092915050565b6000610ff9610ff484611694565b61166f565b9050808382526020820190508285602086028201111561101857600080fd5b60005b8581101561106257813567ffffffffffffffff81111561103a57600080fd5b8086016110478982611192565b8552602085019450602084019350505060018101905061101b565b5050509392505050565b600061107f61107a846116c0565b61166f565b90508281526020810184848401111561109757600080fd5b6110a2848285611a69565b509392505050565b6000813590506110b981611cd8565b92915050565b60008083601f8401126110d157600080fd5b8235905067ffffffffffffffff8111156110ea57600080fd5b60208301915083602082028301111561110257600080fd5b9250929050565b60008083601f84011261111b57600080fd5b8235905067ffffffffffffffff81111561113457600080fd5b60208301915083602082028301111561114c57600080fd5b9250929050565b60008135905061116281611cef565b92915050565b60008135905061117781611d06565b92915050565b60008151905061118c81611d1d565b92915050565b600082601f8301126111a357600080fd5b81356111b384826020860161106c565b91505092915050565b6000815190506111cb81611d34565b92915050565b6000815190506111e081611d4b565b92915050565b600080600080604085870312156111fc57600080fd5b600085013567ffffffffffffffff81111561121657600080fd5b61122287828801611109565b9450945050602085013567ffffffffffffffff81111561124157600080fd5b61124d878288016110bf565b925092505092959194509250565b60006020828403121561126d57600080fd5b600061127b84828501611153565b91505092915050565b6000806040838503121561129757600080fd5b60006112a585828601611153565b92505060206112b6858286016110aa565b9150509250929050565b6000602082840312156112d257600080fd5b60006112e084828501611168565b91505092915050565b6000602082840312156112fb57600080fd5b600082013567ffffffffffffffff81111561131557600080fd5b61132184828501611192565b91505092915050565b600080600080600060a0868803121561134257600080fd5b6000611350888289016111d1565b95505060206113618882890161117d565b9450506040611372888289016111bc565b9350506060611383888289016111bc565b9250506080611394888289016111d1565b9150509295509295909350565b6113aa8161196d565b82525050565b6113b98161197f565b82525050565b6113c88161198b565b82525050565b6113d781611a33565b82525050565b6113e681611a57565b82525050565b60006113f7826116f1565b61140181856116fc565b9350611411818560208601611a78565b61141a81611bdc565b840191505092915050565b6000611430826116f1565b61143a818561170d565b935061144a818560208601611a78565b80840191505092915050565b60006114636020836116fc565b915061146e82611bfa565b602082019050919050565b600061148660178361170d565b915061149182611c23565b601782019050919050565b60006114a960118361170d565b91506114b482611c4c565b601182019050919050565b60006114cc602f836116fc565b91506114d782611c75565b604082019050919050565b6114eb816119fe565b82525050565b60006114fd8284611425565b915081905092915050565b600061151382611479565b915061151f8285611425565b915061152a8261149c565b91506115368284611425565b91508190509392505050565b600060208201905061155760008301846113a1565b92915050565b600060408201905061157260008301856113a1565b61157f60208301846113a1565b9392505050565b600060208201905061159b60008301846113b0565b92915050565b60006020820190506115b660008301846113bf565b92915050565b60006020820190506115d160008301846113ce565b92915050565b60006020820190506115ec60008301846113dd565b92915050565b6000602082019050818103600083015261160c81846113ec565b905092915050565b6000602082019050818103600083015261162d81611456565b9050919050565b6000602082019050818103600083015261164d816114bf565b9050919050565b600060208201905061166960008301846114e2565b92915050565b600061167961168a565b90506116858282611ad5565b919050565b6000604051905090565b600067ffffffffffffffff8211156116af576116ae611bad565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156116db576116da611bad565b5b6116e482611bdc565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611723826119fe565b915061172e836119fe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561176357611762611b4f565b5b828201905092915050565b6000808291508390505b60018511156117b85780860481111561179457611793611b4f565b5b60018516156117a35780820291505b80810290506117b185611bed565b9450611778565b94509492505050565b60006117cc826119fe565b91506117d7836119fe565b92506118047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461180c565b905092915050565b60008261181c57600190506118d8565b8161182a57600090506118d8565b8160018114611840576002811461184a57611879565b60019150506118d8565b60ff84111561185c5761185b611b4f565b5b8360020a91508482111561187357611872611b4f565b5b506118d8565b5060208310610133831016604e8410600b84101617156118ae5782820a9050838111156118a9576118a8611b4f565b5b6118d8565b6118bb848484600161176e565b925090508184048111156118d2576118d1611b4f565b5b81810290505b9392505050565b60006118ea826119fe565b91506118f5836119fe565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561192e5761192d611b4f565b5b828202905092915050565b6000611944826119fe565b915061194f836119fe565b92508282101561196257611961611b4f565b5b828203905092915050565b6000611978826119de565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60008190506119cf82611cc4565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000611a2b368484610fe6565b905092915050565b6000611a3e82611a45565b9050919050565b6000611a50826119de565b9050919050565b6000611a62826119c1565b9050919050565b82818337600083830152505050565b60005b83811015611a96578082015181840152602081019050611a7b565b83811115611aa5576000848401525b50505050565b6000611ab6826119fe565b91506000821415611aca57611ac9611b4f565b5b600182039050919050565b611ade82611bdc565b810181811067ffffffffffffffff82111715611afd57611afc611bad565b5b80604052505050565b6000611b11826119fe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b4457611b43611b4f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b601c8110611cd557611cd4611b7e565b5b50565b611ce18161196d565b8114611cec57600080fd5b50565b611cf88161198b565b8114611d0357600080fd5b50565b611d0f81611995565b8114611d1a57600080fd5b50565b611d26816119d4565b8114611d3157600080fd5b50565b611d3d816119fe565b8114611d4857600080fd5b50565b611d5481611a08565b8114611d5f57600080fd5b5056fea2646970667358221220e26c4111d4605623888d76d9a57bba0d9d31ef1cbb5bed4cc0808eb9785fe28e64736f6c63430008040033",
  "libraries": {
    "TSUtils": "0x9Cb53e5c24Fa1d1cd68c19f5d6f9135E7600bdDb"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_baseCurrency": "The base currency used for the price quotes",
          "_chainlinkFeedRegistry": "The address of the Chainlink Feed Registry implementation",
          "_maxDelayTime": "The max delay time for Chainlink prices to be considered as updated",
          "_sources": "The address of the source of each asset",
          "_symbols": "The symbols of the assets"
        }
      },
      "getAssetPrice(string)": {
        "params": {
          "symbol": "The symbol of the asset"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setAssetSources(string[],address[])": {
        "params": {
          "sources": "The address of the source of each asset",
          "symbols": "The symbols of the assets"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "title": "ExactlyOracle",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor"
      },
      "getAssetPrice(string)": {
        "notice": "Gets an asset price by symbol. If the returned price by the Chainlink Feed Registry is <= 0 the call is reverted"
      },
      "setAssetSources(string[],address[])": {
        "notice": "Set or replace the sources of assets"
      }
    },
    "notice": "Proxy smart contract to get the price of an asset from a price source, with Chainlink Feed Registry         smart contract as the primary option",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 24,
        "contract": "contracts/ExactlyOracle.sol:ExactlyOracle",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
      },
      {
        "astId": 5295,
        "contract": "contracts/ExactlyOracle.sol:ExactlyOracle",
        "label": "assetsSources",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 5298,
        "contract": "contracts/ExactlyOracle.sol:ExactlyOracle",
        "label": "chainlinkFeedRegistry",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IChainlinkFeedRegistry)8854"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IChainlinkFeedRegistry)8854": {
        "encoding": "inplace",
        "label": "contract IChainlinkFeedRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)19_storage"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(RoleData)19_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 16,
            "contract": "contracts/ExactlyOracle.sol:ExactlyOracle",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 18,
            "contract": "contracts/ExactlyOracle.sol:ExactlyOracle",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}